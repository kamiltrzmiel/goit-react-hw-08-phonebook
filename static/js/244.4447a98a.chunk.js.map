{"version":3,"file":"static/js/244.4447a98a.chunk.js","mappings":"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","sources":["../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts/ContactsPage.styled.jsx","pages/Contacts/ContactsPage.jsx"],"sourcesContent":["// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectItems = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n\nexport const selectSortedContacts = state => {\n  const sortedContacts = [...state.contacts.items].sort((a, b) => a.name.localeCompare(b.name));\n  return sortedContacts;\n};\n\nexport const selectFilteredContacts = createSelector(\n  [selectSortedContacts, selectFilter],\n  (contacts, filter) =>\n    contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()))\n);\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  gap: 15px;\n  flex-direction: column;\n  padding: 30px;\n`;\n\nexport const FormInput = styled.input`\n  width: 300px;\n  font-size: 14px;\n  padding: 4px;\n`;\n\n\nexport const FormBtn = styled.button`\n  cursor: pointer;\n\n  display: flex;\n  gap: 8px;\n  justify-content: center;\n  align-items: center;\n\n  margin: 0 auto;\n  margin-top: 6px;\n\n  width: 100%;\n  max-width: 140px;\n  height: 30px;\n  padding: 2px 5px;\n  color: #fff;\n  background-color: #008b8b;\n  font-size: 14px;\n  font-weight: 700;\n  border: none;\n  border-radius: 3px;\n  \n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    color: #010101;\n    background-color: #f6b26b;\n  }\n`;\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectItems } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/contactsOperations';\nimport { Notify } from 'notiflix';\nimport { Form, FormInput, FormBtn } from './ContactForm.styled';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch(); \n  const contacts = useSelector(selectItems); \n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const isAdded = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n    if (isAdded) {\n      return Notify.failure(`${name} is already in contacts.`);\n    }\n\n    const newContact = { name: name, number: number };\n    dispatch(addContact(newContact));\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n        <FormInput\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          placeholder='New contact name'\n          value={name}\n          onChange={handleChange}\n        />\n        <FormInput\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          placeholder='New contact number'\n          value={number}\n          onChange={handleChange}\n        />\n      <FormBtn type=\"submit\">\n        Add contact\n      </FormBtn>\n    </Form>\n  );\n};\n\nexport default ContactForm;\n","import styled from 'styled-components';\n\nexport const ModalBackdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.5);\n`;\n\nexport const ModalContent = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  min-height: 100px;\n  max-width: 320px;\n  width: 100%;\n  padding: 12px;\n  background-color: #fff;\n  border-radius: 3px;\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n`;\n","import { createPortal } from 'react-dom';\nimport { useEffect } from 'react';\nimport { ModalBackdrop, ModalContent } from './Modal.styled';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst Modal = ({ children, onClose }) => {\n  useEffect(() => {\n    const handleKeyDown = event => {\n      if (event.code === 'Escape') {\n        onClose();\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [onClose]);\n\n  const handleBackdropClick = event => {\n    if (event.target === event.currentTarget) {\n      onClose();\n    }\n  };\n  return createPortal(\n    <ModalBackdrop onClick={handleBackdropClick}>\n      <ModalContent>{children}</ModalContent>\n    </ModalBackdrop>,\n    modalRoot\n  );\n};\n\nexport default Modal;\n","import styled from 'styled-components';\n\nexport const ContactsList = styled.ul`\n  max-width: 100%;\n  width: 720px;\n\n  display: flex;\n  gap: 10px;\n  flex-direction: column;\n`;\n\nexport const ContactItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  background-color: #90ee90;\n  padding: 2px 16px;\n\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    box-shadow: rgb(255, 255, 255) -2px -2px 5px,\n      rgba(0, 0, 0, 0.24) 2px 2px 5px;\n  }\n`;\n\nexport const Span = styled.span`\n  display: flex;\n  gap: 4px;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const WrapBtn = styled.div`\n  display: flex;\n  gap: 16px;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const Btn = styled.button`\n  cursor: pointer;\n  display: flex;\n  gap: 5px;\n  justify-content: center;\n  align-items: center;\n  width: 80px;\n  height: 35px;\n  padding: 3px 8px;\n\n  color: #fff;\n  background-color: #329932;\n  font-size: 16px;\n  font-weight: 500;\n\n  border: none;\n  border-radius: 3px;\n\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    color: #010101;\n    background-color: #f6b26b;\n  }\n`;\n\nexport const DelBtn = styled.button`\n  cursor: pointer;\n  display: flex;\n  gap: 0px;\n  justify-content: center;\n  align-items: center;\n  width: 80px;\n  height: 35px;\n  padding: 3px 8px;\n  color: #fff;\n  background-color: #ff3232;\n  font-size: 16px;\n  font-weight: 500;\n\n  border: none;\n  border-radius: 3px;\n\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    color: #010101;\n    background-color: #f6b26b;\n  }\n`;\n\nexport const ModalTitle = styled.h2`\n  text-align: center;\n  padding-bottom: 20px;\n`;\n\nexport const ModalForm = styled.form`\n  display: flex;\n  gap: 16px;\n  flex-direction: column;\n`;\n\nexport const ModalInput = styled.input`\n  width: 200px;\n  font-size: 14px;\n  padding: 4px;\n`;\n\nexport const ModalLabel = styled.label`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 10px;\n\n  font-size: 16px;\n  font-weight: 500;\n`;\n\nexport const WrapModalBtn = styled.div`\n  margin-top: 6px;\n  display: flex;\n  gap: 16px;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const ModalBtn = styled.button`\n  cursor: pointer;\n\n  width: 80px;\n  height: 30px;\n  padding: 2px 5px;\n\n  color: #fff;\n  background-color: #008b8b;\n  font-size: 14px;\n  font-weight: 700;\n\n  border: none;\n  border-radius: 3px;\n\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    color: #010101;\n    background-color: #f6b26b\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilteredContacts } from 'redux/contacts/selectors';\nimport { deleteContact, updateContact } from 'redux/contacts/contactsOperations';\nimport Modal from '../Modal';\nimport { FcSettings, FcFullTrash } from 'react-icons/fc';\nimport {ContactsList, ContactItem, Span, WrapBtn, Btn, DelBtn, ModalForm, ModalLabel, ModalInput, WrapModalBtn, ModalBtn,} from './ContactList.styled';\n\nconst ContactList = () => {\n  const [subName, setSubName] = useState('');\n  const [subNumber, setSubNumber] = useState('');\n  const [subId, setSubId] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const dispatch = useDispatch();\n  const filteredContacts = useSelector(selectFilteredContacts);\n\n  const handleDeleteContact = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n\n  const showModal = (name, number, id) => {\n    setSubNumber(number);\n    setSubName(name);\n    setSubId(id);\n    setIsModalOpen(true);\n  };\n\n  const handleSave = () => {\n    setIsModalOpen(false);\n    dispatch(updateContact({ id: subId, name: subName, number: subNumber }));\n  };\n\n  const handleCancel = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <>\n      <ContactsList>\n        {filteredContacts.map(({ id, name, number }) => (\n          <ContactItem key={id}>\n            <Span> {name}: </Span>\n            <Span> {number} </Span>\n            <WrapBtn>\n              <Btn type=\"button\" onClick={() => showModal(name, number, id)}>\n                <FcSettings />\n                Edit\n              </Btn>\n              <DelBtn type=\"button\" onClick={() => handleDeleteContact(id)}>\n                <FcFullTrash />\n                Delete\n              </DelBtn>\n            </WrapBtn>\n          </ContactItem>\n        ))}\n\n        {!filteredContacts?.length && <div>No contacts found.</div>}\n      </ContactsList>\n      {isModalOpen && (\n        <Modal onClose={handleCancel}>\n          <ModalForm>\n            <ModalLabel>\n              Name:\n              <ModalInput\n                type=\"text\"\n                name=\"name\"\n                value={subName}\n                onChange={event => {\n                  setSubName(event.target.value);\n                }}\n                placeholder='Name'\n              />\n            </ModalLabel>\n            <ModalLabel>\n              Number:\n              <ModalInput\n                type=\"tel\"\n                name=\"number\"\n                value={subNumber}\n                onChange={event => {\n                  setSubNumber(event.target.value);\n                }}\n                placeholder='Number'\n              />\n            </ModalLabel>\n            <WrapModalBtn>\n              <ModalBtn type=\"button\" onClick={handleSave}>\n                Update\n              </ModalBtn>\n              <ModalBtn type=\"button\" onClick={handleCancel}>\n                Cancel\n              </ModalBtn>\n            </WrapModalBtn>\n          </ModalForm>\n        </Modal>\n      )}\n    </>\n  );\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const FilterBlock = styled.div`\n  margin-top: 20px`;\n\nexport const FilterLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 10px;\n\n  font-size: 16px;\n  font-weight: 500;\n`;\n\nexport const FilterInput = styled.input`\n  width: 250px;\n  margin-bottom: 20px;\n  font-size: 14px;\n  padding: 4px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { FilterBlock, FilterInput } from './Filter.styled';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const handleChange = event => {\n    const valueFilter = event.currentTarget.value.trim();\n    dispatch(setFilter(valueFilter));\n  };\n\n  return (\n    <FilterBlock>\n        <FilterInput\n          type=\"text\"\n          placeholder=\"Find contacts ...\"\n          value={filter}\n          onChange={handleChange}\n        />\n    </FilterBlock>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const Container = styled.section`\n  margin-top: 10px;\n  display: flex;\n  font-size: 16px;\n  flex-direction: column;\n  align-items: center;\n  padding-top: 15px;\n`;\n\nexport const Title = styled.h1`\n  margin: 30px 0 20px;\n`;\n\nexport const Subtitle = styled.h2`\n  margin: 30px 0 20px;\n`;\n\n\nexport const Message = styled.p`\n  font-size: 18px;\n  font-weight: 500;\n  padding: 40px 60px;\n  background-color: #90ee90;\n`;\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/contactsOperations';\nimport { selectItems, selectIsLoading, selectError } from 'redux/contacts/selectors';\nimport ContactForm from 'components/ContactForm';\nimport ContactList from 'components/ContactList';\nimport Filter from 'components/Filter';\nimport { Container, Message } from './ContactsPage.styled';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectItems);\n  const error = useSelector(selectError);\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <ContactForm />\n      {contacts.length > 0 ? (\n        <>\n          <Filter />\n          <ContactList />\n        </>\n      ) : (\n        <Message>No items</Message>\n      )}\n      {isLoading && !error && <b>Request in progress...</b>}\n      {error && error}\n    </Container>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectItems","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","selectFilteredContacts","sort","localeCompare","contact","toLowerCase","includes","Form","styled","FormInput","FormBtn","useState","setName","number","setNumber","dispatch","useDispatch","useSelector","handleChange","event","currentTarget","resetForm","onSubmit","preventDefault","Notify","newContact","addContact","type","pattern","title","required","placeholder","onChange","ModalBackdrop","ModalContent","modalRoot","document","querySelector","children","onClose","useEffect","handleKeyDown","code","window","addEventListener","removeEventListener","createPortal","onClick","target","ContactsList","ContactItem","Span","WrapBtn","Btn","DelBtn","ModalForm","ModalInput","ModalLabel","WrapModalBtn","ModalBtn","subName","setSubName","subNumber","setSubNumber","subId","setSubId","isModalOpen","setIsModalOpen","filteredContacts","handleCancel","id","showModal","contactId","deleteContact","updateContact","FilterBlock","FilterInput","valueFilter","trim","setFilter","Container","Message","fetchContacts"],"sourceRoot":""}